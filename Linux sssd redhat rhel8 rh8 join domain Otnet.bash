#steps to join Linux Rhel8 sur AD dans l'otner
#pour les  2 fichiers dans /etc/authselect/custom/user-profile 
#tu supprimes le contenu et tu copie et pastes ce qui est dans mon txt 
#et tu modifie après la ligne simple_allow_groups dans le sssd.conf selon tes besoins 

##### ########## AD Active directory sssd

DC:
search otnet.proc
nameserver 10.11.12.11
nameserver 10.11.12.111

cajnqszdc1.otnet.proc

PS pour otnet c'Est différent les DC et domaine
ad_server = CAJNQSZDC1.otnet.proc
ad_backup_server = CAJNQSZDC2.otnet.proc


[root@casagszostdev1 ~]# cat /etc/resolv.conf
# Generated by NetworkManager
#search corp.riotinto.org
search otnet.proc
nameserver 10.11.12.11
nameserver 10.11.12.111


##################################  Debut de la copie si désiré :

cp /etc/openldap/ldap.conf /etc/openldap/ldap.conf.`date +'%Y.%M.%d'`

cat << EOF >  /etc/openldap/ldap.conf   
#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

#BASE   dc=example,dc=com
#URI    ldap://ldap.example.com ldap://ldap-master.example.com:666

#SIZELIMIT      12
#TIMELIMIT      15
#DEREF          never

#TLS_CACERTDIR  /etc/openldap/certs

# Turning this off breaks GSSAPI used with krb5 when rdns = false
#SASL_NOCANON   on

URI  ldap://cajnqszdc1.otnet.proc
BASE DC=otnet,DC=proc
TLS_REQCERT DEMAND
REFERRALS OFF
EOF


cp -p  /etc/krb5.conf /etc/krb5.conf.`date +'%Y.%M.%d'`

cat << EOF > /etc/krb5.conf
[logging]
 default = FILE:/var/log/krb5libs.log
 kdc = FILE:/var/log/krb5kdc.log
 admin_server = FILE:/var/log/kadmind.log

[libdefaults]
 dns_lookup_realm = false
 dns_lookup_kdc = true
 ticket_lifetime = 24h
 renew_lifetime = 7d
 forwardable = true
 rdns = false
 default_realm = OTNET.PROC
 default_ccache_name = KEYRING:persistent:%{uid}

[realms]

[domain_realm]
EOF


##################################  Fin de la copie si désiré :


Joindre le Domaine et créer le compte machine, mettre le bon hostname


[root@casagszostdev1 ~]# adcli join -v --host-fqdn=`hostname | tr '[:lower:]' '[:upper:]'`.otnet.proc -U otnet.e.rwakineza  --domain-ou='OU=Linux,OU=Servers,OU=OTNET,DC=otnet,DC=proc' otnet.proc


[root@casagszostdev1 ~]# mkdir /root/pam.bk
[root@casagszostdev1 ~]# rsync -av  /etc/resolv.conf /etc/pam.d/* /root/pam.bk/
sending incremental file list


[root@casagszostdev1 ~]# authselect current
Profile ID: sssd
Enabled features:
- with-fingerprint
- with-silent-lastlog

[root@casagszostdev1 ~]# authselect create-profile user-profile -b sssd --symlink-meta
New profile was created at /etc/authselect/custom/user-profile

[root@casagszostdev1 ~]# cd /etc/authselect/custom/user-profile/
[root@casagszostdev1 user-profile]# ls
dconf-db  dconf-locks  fingerprint-auth  nsswitch.conf  password-auth  postlogin  README  REQUIREMENTS  smartcard-auth  system-auth


[root@casagszostdev1 user-profile]# vi password-auth
[root@casagszostdev1 user-profile]# cat password-auth
auth        required                                     pam_env.so
auth        required                                     pam_faildelay.so delay=2000000
auth        required                                     pam_deny.so # Smartcard authentication is required     {include if "with-smartcard-required"}
auth        required                                     pam_faillock.so preauth silent audit deny=3 unlock_time=600       {include if "with-faillock"}
auth        sufficient                                   pam_u2f.so cue                                         {include if "with-pam-u2f"}
auth        required                                     pam_u2f.so cue {if not "without-pam-u2f-nouserok":nouserok} {include if "with-pam-u2f-2fa"}
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        [default=1 ignore=ignore success=ok]         pam_localuser.so
auth        sufficient                                   pam_unix.so {if not "without-nullok":nullok}
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        sufficient                                   pam_sss.so forward_pass
auth        required                                     pam_faillock.so authfail                               {include if "with-faillock"}
auth        optional                                     pam_gnome_keyring.so auto_start                        {include if "with-pam-gnome-keyring"}
auth        required                                     pam_deny.so

account     required                                     pam_access.so                                          {include if "with-pamaccess"}
account     required                                     pam_faillock.so                                        {include if "with-faillock"}
account     required                                     pam_unix.so
account     sufficient                                   pam_localuser.so                                       {exclude if "with-files-access-provider"}
account     sufficient                                   pam_usertype.so issystem
account     [default=bad success=ok user_unknown=ignore] pam_sss.so
account     required                                     pam_permit.so

password    requisite                                    pam_pwquality.so local_users_only try_first_pass retry=3 authtok_type=
password    [default=1 ignore=ignore success=ok]         pam_localuser.so                                       {include if "with-pwhistory"}
password    requisite                                    pam_pwhistory.so debug use_authtok remember=24         {include if "with-pwhistory"}
password    sufficient                                   pam_unix.so sha512 shadow {if not "without-nullok":nullok} use_authtok
password    [success=1 default=ignore]                   pam_localuser.so
password    sufficient                                   pam_sss.so use_authtok
password    required                                     pam_deny.so

session     optional                                     pam_keyinit.so revoke
session     required                                     pam_limits.so
-session    optional                                     pam_systemd.so
session     optional                                     pam_oddjob_mkhomedir.so umask=0077                              {include if "with-mkhomedir"}
session     [success=1 default=ignore]                   pam_succeed_if.so service in crond quiet use_uid
session     required                                     pam_unix.so
session     optional                                     pam_sss.so
session     optional                                     pam_gnome_keyring.so auto_start                        {include if "with-pam-gnome-keyring"}




[root@casagszostdev1 user-profile]# vi system-auth
[root@casagszostdev1 user-profile]# cat system-auth

{imply "with-smartcard" if "with-smartcard-required"}
auth        required                                     pam_env.so
auth        required                                     pam_faildelay.so delay=2000000
auth        required                                     pam_faillock.so preauth silent audit deny=3 unlock_time=600   {include if "with-faillock"}
auth        [success=1 default=ignore]                   pam_succeed_if.so service notin login:gdm:xdm:kdm:kde:xscreensaver:gnome-screensaver:kscreensaver quiet use_uid {include if "with-smartcard-required"}
auth        [success=done ignore=ignore default=die]     pam_sss.so require_cert_auth ignore_authinfo_unavail   {include if "with-smartcard-required"}
auth        sufficient                                   pam_fprintd.so                                         {include if "with-fingerprint"}
auth        sufficient                                   pam_u2f.so cue                                         {include if "with-pam-u2f"}
auth        required                                     pam_u2f.so cue {if not "without-pam-u2f-nouserok":nouserok} {include if "with-pam-u2f-2fa"}
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        [default=1 ignore=ignore success=ok]         pam_localuser.so                                       {exclude if "with-smartcard"}
auth        [default=2 ignore=ignore success=ok]         pam_localuser.so                                       {include if "with-smartcard"}
auth        [success=done authinfo_unavail=ignore user_unknown=ignore ignore=ignore default=die] pam_sss.so try_cert_auth {include if "with-smartcard"}
auth        sufficient                                   pam_unix.so {if not "without-nullok":nullok}
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular                              {include if "with-gssapi"}
auth        sufficient                                   pam_sss_gss.so                                         {include if "with-gssapi"}
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        sufficient                                   pam_sss.so forward_pass
auth        required                                     pam_faillock.so authfail                               {include if "with-faillock"}
auth        optional                                     pam_gnome_keyring.so only_if=login auto_start          {include if "with-pam-gnome-keyring"}
auth        required                                     pam_deny.so

account     required                                     pam_access.so                                          {include if "with-pamaccess"}
account     required                                     pam_faillock.so                                        {include if "with-faillock"}
account     required                                     pam_unix.so
account     sufficient                                   pam_localuser.so                                       {exclude if "with-files-access-provider"}
account     sufficient                                   pam_usertype.so issystem
account     [default=bad success=ok user_unknown=ignore] pam_sss.so
account     required                                     pam_permit.so

password    requisite                                    pam_pwquality.so  try_first_pass local_users_only local_users_only retry=3 authtok_type=
password    [default=1 ignore=ignore success=ok]         pam_localuser.so                                       {include if "with-pwhistory"}
password    requisite                                    pam_pwhistory.so use_authtok                           {include if "with-pwhistory"}
password    sufficient                                   pam_unix.so sha512 shadow {if not "without-nullok":nullok} use_authtok try_first_pass remember=24
password    [success=1 default=ignore]                   pam_localuser.so
password    sufficient                                   pam_sss.so use_authtok
password    required                                     pam_deny.so

session     optional                                     pam_keyinit.so revoke
session     required                                     pam_limits.so
-session    optional                                     pam_systemd.so
session     optional                                     pam_oddjob_mkhomedir.so  umask=0077                             {include if "with-mkhomedir"}
session     [success=1 default=ignore]                   pam_succeed_if.so service in crond quiet use_uid
session     required                                     pam_unix.so
session     optional                                     pam_sss.so
session     optional                                     pam_gnome_keyring.so only_if=login auto_start          {include if "with-pam-gnome-keyring"}


[root@casagszostora1 user-profile]# authselect list
- minimal                Local users only for minimal installations
- nis                    Enable NIS for system authentication
- sssd                   Enable SSSD for system authentication (also for local users only)
- winbind                Enable winbind for system authentication
- custom/user-profile    Enable SSSD for system authentication (also for local users only)


[root@casagszostdev1 user-profile]# authselect  select custom/user-profile with-mkhomedir with-faillock with-pwhistory  --force
[error] [/etc/authselect/system-auth] has unexpected content!
[error] [/etc/authselect/password-auth] has unexpected content!
[error] [/etc/authselect/fingerprint-auth] has unexpected content!
Backup stored at /var/lib/authselect/backups/2024-01-23-16-15-07.8rDiz2
Profile "custom/user-profile" was selected.
The following nsswitch maps are overwritten by the profile:
- passwd
- group
- netgroup
- automount
- services

Make sure that SSSD service is configured and enabled. See SSSD documentation for more information.

- with-mkhomedir is selected, make sure pam_oddjob_mkhomedir module
  is present and oddjobd service is enabled and active
  - systemctl enable --now oddjobd.service


[root@casagszostdev1 user-profile]# systemctl status  oddjobd.service
? oddjobd.service - privileged operations for unprivileged applications
   Loaded: loaded (/usr/lib/systemd/system/oddjobd.service; disabled; vendor preset: disabled)
   Active: inactive (dead)

[root@casagszostdev1 user-profile]# systemctl enable --now oddjobd.service
Created symlink /etc/systemd/system/multi-user.target.wants/oddjobd.service ? /usr/lib/systemd/system/oddjobd.service.

[root@casagszostdev1 user-profile]# systemctl status  oddjobd.service
? oddjobd.service - privileged operations for unprivileged applications
   Loaded: loaded (/usr/lib/systemd/system/oddjobd.service; enabled; vendor preset: disabled)
   Active: active (running) since Tue 2024-01-23 11:12:46 EST; 9s ago


root@casagszostdev1 user-profile]# cat /etc/pam.d/password-auth
# Generated by authselect on Tue Jan 23 11:15:07 2024
# Do not modify this file manually.

auth        required                                     pam_env.so
auth        required                                     pam_faildelay.so delay=2000000
auth        required                                     pam_faillock.so preauth silent audit deny=3 unlock_time=600
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        [default=1 ignore=ignore success=ok]         pam_localuser.so
auth        sufficient                                   pam_unix.so nullok
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        sufficient                                   pam_sss.so forward_pass
auth        required                                     pam_faillock.so authfail
auth        required                                     pam_deny.so

account     required                                     pam_faillock.so
account     required                                     pam_unix.so
account     sufficient                                   pam_localuser.so
account     sufficient                                   pam_usertype.so issystem
account     [default=bad success=ok user_unknown=ignore] pam_sss.so
account     required                                     pam_permit.so

password    requisite                                    pam_pwquality.so local_users_only try_first_pass retry=3 authtok_type=
password    [default=1 ignore=ignore success=ok]         pam_localuser.so
password    requisite                                    pam_pwhistory.so debug use_authtok remember=24
password    sufficient                                   pam_unix.so sha512 shadow nullok use_authtok
password    [success=1 default=ignore]                   pam_localuser.so
password    sufficient                                   pam_sss.so use_authtok
password    required                                     pam_deny.so

session     optional                                     pam_keyinit.so revoke
session     required                                     pam_limits.so
-session    optional                                     pam_systemd.so
session     optional                                     pam_oddjob_mkhomedir.so umask=0077
session     [success=1 default=ignore]                   pam_succeed_if.so service in crond quiet use_uid
session     required                                     pam_unix.so
session     optional                                     pam_sss.so


[root@casagszostdev1 user-profile]# cat /etc/pam.d/password-auth
# Generated by authselect on Tue Jan 23 11:15:07 2024
# Do not modify this file manually.

auth        required                                     pam_env.so
auth        required                                     pam_faildelay.so delay=2000000
auth        required                                     pam_faillock.so preauth silent audit deny=3 unlock_time=600
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        [default=1 ignore=ignore success=ok]         pam_localuser.so
auth        sufficient                                   pam_unix.so nullok
auth        [default=1 ignore=ignore success=ok]         pam_usertype.so isregular
auth        sufficient                                   pam_sss.so forward_pass
auth        required                                     pam_faillock.so authfail
auth        required                                     pam_deny.so

account     required                                     pam_faillock.so
account     required                                     pam_unix.so
account     sufficient                                   pam_localuser.so
account     sufficient                                   pam_usertype.so issystem
account     [default=bad success=ok user_unknown=ignore] pam_sss.so
account     required                                     pam_permit.so

password    requisite                                    pam_pwquality.so local_users_only try_first_pass retry=3 authtok_type=
password    [default=1 ignore=ignore success=ok]         pam_localuser.so
password    requisite                                    pam_pwhistory.so debug use_authtok remember=24
password    sufficient                                   pam_unix.so sha512 shadow nullok use_authtok
password    [success=1 default=ignore]                   pam_localuser.so
password    sufficient                                   pam_sss.so use_authtok
password    required                                     pam_deny.so

session     optional                                     pam_keyinit.so revoke
session     required                                     pam_limits.so
-session    optional                                     pam_systemd.so
session     optional                                     pam_oddjob_mkhomedir.so umask=0077
session     [success=1 default=ignore]                   pam_succeed_if.so service in crond quiet use_uid
session     required                                     pam_unix.so
session     optional                                     pam_sss.so
[root@casagszostdev1 user-profile]#


[root@casagszostdev1 user-profile]# cat /etc/nsswitch.conf | grep -v ^# | grep .

passwd:     files sss systemd
group:      files sss systemd
netgroup:   sss files
automount:  sss files
services:   sss files
shadow:     files sss
hosts:      files dns myhostname
aliases:    files
ethers:     files
gshadow:    files
networks:   files dns
protocols:  files
publickey:  files
rpc:        files




#################################  Debut de la copie si désiré :

[ -f /etc/sssd/sssd.conf ] && cp /etc/sssd/sssd.conf /etc/sssd/sssd.conf.`date +'%Y.%m.%d'`

cat << EOF >  /etc/sssd/sssd.conf
[sssd]
domains = otnet.proc
config_file_version = 2
services = nss, pam

[nss]
#filter_users = root
#filter_groups = root

[pam]

[sudo]

[autofs]

[ssh]

[domain/otnet.proc]
debug_level=3
ad_domain = otnet.proc
ad_enabled_domains = otnet.proc
krb5_realm = OTNET.PROC
realmd_tags = manages-system joined-with-samba
cache_credentials = True
ldap_use_tokengroups = False
id_provider = ad
auth_provider = ad
chpass_provider = ad
access_provider = simple
krb5_store_password_if_offline = True
default_shell = /bin/bash
ldap_id_mapping = True
ldap_referrals = false
use_fully_qualified_names = False
fallback_homedir = /home/%d/%u
#simple_allow_groups = cgi-support-serverlocaladmin,role_ams_chimie_admn2
#simple_allow_groups = cgi-support-serverlocaladmin,cgi-support-dbaosas
simple_allow_groups = cgi-support-serverlocaladmin
ad_server = CAJNQSZDC1.otnet.proc
ad_backup_server = CAJNQSZDC2.otnet.proc
ad_site = otnet.proc
ad_enable_dns_sites = False
enumerate = False
dyndns_update = False
case_sensitive = False
ldap_schema = ad
account_cache_expiration = 0
ldap_uri = ldap://CAJNQSZDC1.otnet.proc
ldap_search_base = DC=otnet,DC=proc
ldap_user_search_base = OU=Accounts,OU=OTNET,DC=otnet,DC=proc
#ldap_group_search_base = OU=Groups,OU=OTNET,DC=otnet,DC=proc
ad_maximum_machine_account_password_age = 0
EOF

chmod 0600 /etc/sssd/sssd.conf

cat << EOF >  /etc/openldap/ldap.conf   
#
# LDAP Defaults
#

# See ldap.conf(5) for details
# This file should be world readable but not world writable.

#BASE   dc=example,dc=com
#URI    ldap://ldap.example.com ldap://ldap-master.example.com:666

#SIZELIMIT      12
#TIMELIMIT      15
#DEREF          never

#TLS_CACERTDIR  /etc/openldap/certs

# Turning this off breaks GSSAPI used with krb5 when rdns = false
#SASL_NOCANON   on

URI  ldap://cajnqszdc1.otnet.proc
BASE DC=otnet,DC=proc
TLS_REQCERT DEMAND
REFERRALS OFF
EOF



##################################  Fin de la copie si désiré :


Activer et vérifier le service sssd :

systemctl enable sssd && systemctl start sssd && sleep 1 && systemctl status sssd


Ajuster les droits aux serveurs dans le fichier /etc/sssd/sssd.conf  la section simple_allow_groups et repartir le service

vi /etc/sssd/sssd.conf
systemctl daemon-reload;systemctl restart sssd


Tester 

[root@caalmszinflxdb1 ~]# getent passwd otnet.dany.cote
otnet.dany.cote:*:1229403212:1229400513:Dany Cote:/home/otnet.proc/otnet.dany.cote:/bin/bash

[root@caalmszinflxdb1 ~]# id otnet.dany.cote
uid=1229403212(otnet.dany.cote) gid=1229400513(domain users) groups=1229400513(domain users),1229403204(cgi-support-serverlocaladmin),1229403252(perm_alm_vmwareadmin),1229403546(otnet_prj_influxdb),1229402833(perm_arv_vmwareceoadmin),1229403110(perm_ugb_vmwarealpsysadmin)

[root@casagszostdev1 ~]# getent group cgi-support-serverlocaladmin
cgi-support-serverlocaladmin:*:1229403204:otnet.dany.cote,otnet.d.prado,otnet.i.maoulid,otnet.max.tremblay,otnet.d.blackburn,otnet.e.rwakineza,otnet.luc.st-pierre,otnet.d.lapointe,otnet.patricegamache,otnet.s.gauthier,otnet.david.test,otnet.duchainer,otnet.maximebrassard,ma.tremblay-gagnon,otnet.jonqv-caepmope,otnet.bilodeaut2,otnet.r.gauthier,otnet.pascal.murray,otnet.michel.paquet,otnet.bill.cooke,otnet.t.ungureanu,otnet.jr.cote,sa.solarwinds,otnet.raymondn,tremblaypatr


